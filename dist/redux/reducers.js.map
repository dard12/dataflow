{"version":3,"file":"reducers.js","sourceRoot":"/","sources":["redux/reducers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,kDAAuB;AACvB,4CAAiD;AACjD,qCAAsE;AAEzD,QAAA,YAAY,GAAG,uBAAa,CAKvC;IACE,KAAK,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;IACpC,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC;IAC9B,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;CAC3C;IAEC,GAAC,qBAAW,CAAC,IAAI,IAAG,UAAC,KAAK,EAAE,MAAM;QAC1B,IAAA,KAA0B,MAAM,CAAC,OAAO,EAAtC,KAAK,WAAA,EAAE,EAAE,QAAA,EAAE,QAAQ,cAAmB,CAAC;QAC/C,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;QACd,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,GAAC,sBAAY,CAAC,IAAI,IAAG,UAAC,KAAK,EAAE,MAAM;QACjC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC;QAChB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;IACxB,CAAC;QAEJ,CAAC;AAEW,QAAA,kBAAkB,GAAG,uBAAa,CAG7C,EAAE;IAEA,GAAC,wBAAc,CAAC,IAAI,IAAG,UAAC,KAAK,EAAE,MAAM;QAC7B,IAAA,KAAuB,MAAM,CAAC,OAAO,EAAnC,IAAI,UAAA,EAAE,UAAU,gBAAmB,CAAC;QAE5C,gBAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,GAAG;;YACf,IAAI,UAAU,KAAK,MAAM,EAAE;gBACzB,KAAK,CAAC,UAAU,CAAC,yBACZ,KAAK,CAAC,UAAU,CAAC,gBACnB,GAAG,CAAC,EAAE,IAAG,GAAG,KACZ,GAAG,CAAC,QAAQ,IAAG,GAAG,MACpB,CAAC;aACH;iBAAM,IAAI,UAAU,KAAK,UAAU,EAAE;gBACpC,KAAK,CAAC,UAAU,CAAC,yBACZ,KAAK,CAAC,UAAU,CAAC,gBACnB,GAAG,CAAC,EAAE,IAAG,GAAG,KACZ,GAAG,CAAC,UAAU,IAAG,GAAG,MACtB,CAAC;aACH;iBAAM;gBACL,KAAK,CAAC,UAAU,CAAC,yBAAQ,KAAK,CAAC,UAAU,CAAC,gBAAG,GAAG,CAAC,EAAE,IAAG,GAAG,MAAE,CAAC;aAC7D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;QAEJ,CAAC","sourcesContent":["import _ from 'lodash';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { loginAction, logoutAction, loadDocsAction } from './actions';\n\nexport const loginReducer = createReducer<{\n  token: string | null;\n  id: string | null;\n  username: string | null;\n}>(\n  {\n    token: localStorage.getItem('token'),\n    id: localStorage.getItem('id'),\n    username: localStorage.getItem('username'),\n  },\n  {\n    [loginAction.type]: (state, action) => {\n      const { token, id, username } = action.payload;\n      state.token = token;\n      state.id = id;\n      state.username = username;\n    },\n\n    [logoutAction.type]: (state, action) => {\n      state.token = null;\n      state.id = null;\n      state.username = null;\n    },\n  },\n);\n\nexport const collectionsReducer = createReducer<{\n  [collection: string]: { [docId: string]: any };\n}>(\n  {},\n  {\n    [loadDocsAction.type]: (state, action) => {\n      const { docs, collection } = action.payload;\n\n      _.each(docs, (doc) => {\n        if (collection === 'user') {\n          state[collection] = {\n            ...state[collection],\n            [doc.id]: doc,\n            [doc.username]: doc,\n          };\n        } else if (collection === 'response') {\n          state[collection] = {\n            ...state[collection],\n            [doc.id]: doc,\n            [doc.update_key]: doc,\n          };\n        } else {\n          state[collection] = { ...state[collection], [doc.id]: doc };\n        }\n      });\n    },\n  },\n);\n"]}