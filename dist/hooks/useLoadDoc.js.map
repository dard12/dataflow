{"version":3,"file":"useLoadDoc.js","sourceRoot":"/","sources":["hooks/useLoadDoc.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,2CAA0C;AAC1C,gDAAwD;AACxD,uCAAyC;AAElC,IAAM,UAAU,GAAG,UAAC,EAU1B;QATC,IAAI,UAAA,EACJ,UAAU,gBAAA,EACV,EAAE,QAAA,EACF,KAAK,WAAA;IAOL,IAAM,QAAQ,GAAG,yBAAW,EAAE,CAAC;IAC/B,IAAM,GAAG,GAAG,kBAAM,CAAC,EAAE,UAAU,YAAA,EAAE,EAAE,IAAA,EAAE,CAAC,CAAC;IACvC,IAAM,WAAW,GAAG,sBAAW,CAAC,UAAQ,UAAY,EAAE,KAAK,IAAI,EAAE,EAAE,IAAA,EAAE,EAAE;QACrE,IAAI,EAAK,IAAI,WAAM,UAAU,WAAM,EAAI;QACvC,cAAc,EAAE,IAAI;QACpB,YAAY,EAAE,GAAG;QACjB,QAAQ,UAAA;KACT,CAAC,CAAC;IAEH,6BAAY,WAAW,KAAE,GAAG,KAAA,IAAG;AACjC,CAAC,CAAC;AArBW,QAAA,UAAU,cAqBrB;AAEK,IAAM,cAAc,GAAG,UAAC,EAY9B;QAXC,IAAI,UAAA,EACJ,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,MAAM,YAAA,EACN,KAAK,WAAA;IAQL,IAAM,QAAQ,GAAG,yBAAW,EAAE,CAAC;IAC/B,IAAM,IAAI,GAAG,sBAAU,CAAC,EAAE,UAAU,YAAA,EAAE,MAAM,QAAA,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;IACvD,IAAM,WAAW,GAAG,sBAAW,CAAC,UAAQ,UAAY,EAAE,KAAK,EAAE;QAC3D,IAAI,EAAK,IAAI,WAAM,UAAU,YAAS;QACtC,cAAc,EAAE,IAAI;QACpB,QAAQ,UAAA;KACT,CAAC,CAAC;IAEH,6BAAY,WAAW,KAAE,IAAI,MAAA,IAAG;AAClC,CAAC,CAAC;AAtBW,QAAA,cAAc,kBAsBzB","sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useDocList, useDoc } from '../redux/selectors';\nimport { useAxiosGet } from './useAxios';\n\nexport const useLoadDoc = ({\n  name,\n  collection,\n  id,\n  query,\n}: {\n  name: string;\n  collection: string;\n  id?: string;\n  query?: any;\n}) => {\n  const dispatch = useDispatch();\n  const doc = useDoc({ collection, id });\n  const fetchResult = useAxiosGet(`/api/${collection}`, query || { id }, {\n    name: `${name} | ${collection} | ${id}`,\n    reloadOnChange: true,\n    cachedResult: doc,\n    dispatch,\n  });\n\n  return { ...fetchResult, doc };\n};\n\nexport const useLoadDocList = ({\n  name,\n  collection,\n  query,\n  filter,\n  order,\n}: {\n  name: string;\n  collection: string;\n  query: any;\n  filter?: any;\n  order?: any;\n}) => {\n  const dispatch = useDispatch();\n  const docs = useDocList({ collection, filter, order });\n  const fetchResult = useAxiosGet(`/api/${collection}`, query, {\n    name: `${name} | ${collection} | List`,\n    reloadOnChange: true,\n    dispatch,\n  });\n\n  return { ...fetchResult, docs };\n};\n"]}