{"version":3,"file":"useAxios.js","sourceRoot":"/","sources":["hooks/useAxios.ts"],"names":[],"mappings":";;;;;;AAAA,+BAA4C;AAC5C,kDAAuB;AACvB,gDAA0B;AAC1B,4CAAkD;AAElD,IAAM,KAAK,GAAG,eAAK,CAAC,MAAM,EAAE,CAAC;AAE7B,SAAgB,SAAS,CAAC,OAAe;IACvC,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;IACjC,KAAK,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC;AACxC,CAAC;AAHD,8BAGC;AAED,SAAgB,WAAW,CACzB,GAAW,EACX,MAAW,EACX,OAAiC;IAEjC,OAAO,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,EAAQ;YAAN,IAAI,UAAA;QACrD,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;AACL,CAAC;AATD,kCASC;AAED,SAAgB,SAAS,CACvB,GAAW,EACX,MAAW,EACX,OAAiC;IAEjC,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,EAAQ;YAAN,IAAI,UAAA;QACzC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;AACL,CAAC;AATD,8BASC;AAED,SAAgB,QAAQ,CACtB,GAAW,EACX,MAAY,EACZ,OAAiC;IAEjC,OAAO,KAAK,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,EAAQ;YAAN,IAAI,UAAA;QACvD,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;AACL,CAAC;AATD,4BASC;AAED,SAAgB,WAAW,CACzB,GAAW,EACX,YAAiB,EACjB,OAMC;IAED,IAAM,YAAY,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC;IAC3C,IAAM,cAAc,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,cAAc,CAAC;IAC/C,IAAM,cAAc,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,cAAc,CAAC;IAC/C,IAAM,IAAI,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC;IAC3B,IAAM,QAAQ,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAC;IAE7B,IAAA,KAA4B,gBAAQ,CAAC,KAAK,CAAC,EAA1C,SAAS,QAAA,EAAE,YAAY,QAAmB,CAAC;IAC5C,IAAA,KAAoB,gBAAQ,CAAC,KAAK,CAAC,EAAlC,KAAK,QAAA,EAAE,QAAQ,QAAmB,CAAC;IACpC,IAAA,KAAsB,gBAAQ,CAAM,SAAS,CAAC,EAA7C,MAAM,QAAA,EAAE,SAAS,QAA4B,CAAC;IAC/C,IAAA,KAAsB,gBAAQ,CAAC,YAAY,CAAC,EAA3C,MAAM,QAAA,EAAE,SAAS,QAA0B,CAAC;IAC7C,IAAA,KAAoB,gBAAQ,CAAC,YAAY,CAAC,EAAzC,KAAK,QAAA,EAAE,QAAQ,QAA0B,CAAC;IAEjD,IAAI,cAAc,IAAI,CAAC,gBAAC,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,EAAE;QACtD,QAAQ,CAAC,IAAI,CAAC,CAAC;QACf,SAAS,CAAC,YAAY,CAAC,CAAC;QACxB,cAAc,IAAI,cAAc,EAAE,CAAC;KACpC;IAED,iBAAS,CAAC;QACR,IAAI,SAAS,GAAG,IAAI,CAAC;QAErB,YAAY,CAAC,KAAK,CAAC,CAAC;QAEpB,IAAI,CAAC,gBAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACrB,SAAS,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC7B,YAAY,CAAC,IAAI,CAAC,CAAC;SACpB;aAAM;YACL,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,QAAQ,UAAA,EAAE,CAAC;iBAChC,IAAI,CAAC,UAAC,IAAI;gBACT,IAAI,SAAS,EAAE;oBACb,4CAA4C;oBAE5C,IAAM,OAAO,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC;oBAE9B,IAAM,QAAM,GAAG,OAAO;wBACpB,CAAC,CAAC,gBAAC,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;wBAC7B,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBAEtB,SAAS,CAAC,QAAM,CAAC,CAAC;oBAClB,YAAY,CAAC,IAAI,CAAC,CAAC;iBACpB;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAK;gBACX,IAAI,SAAS,EAAE;oBACb,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACjB;YACH,CAAC,CAAC,CAAC;SACN;QAED,OAAO;YACL,SAAS,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzC,OAAO,EAAE,SAAS,WAAA,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,CAAC;AACtC,CAAC;AAlED,kCAkEC;AAED,SAAS,QAAQ,CAAC,MAAW,EAAE,OAAiC;IAC9D,IAAM,QAAQ,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAC;IAEnC,IAAI,QAAQ,EAAE;QACZ,IAAM,OAAO,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,CAAC;QAEhC,IAAI,OAAO,EAAE;YACX,gBAAC,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,wBAAc,CAAC,CAAC,CAAC;SAC3C;aAAM;YACL,QAAQ,CAAC,wBAAc,CAAC,MAAM,CAAC,CAAC,CAAC;SAClC;KACF;AACH,CAAC;AAED,SAAS,WAAW,CAAC,EAAqC;QAAnC,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,UAAU,gBAAA;IACjD,OAAO;QACL,IAAI,MAAA;QACJ,IAAI,MAAA;QACJ,IAAI,EAAE,gBAAC,CAAC,SAAS,CAAC,IAAI,CAAC;QACvB,UAAU,YAAA;KACX,CAAC;AACJ,CAAC;AAED,kBAAe,KAAK,CAAC","sourcesContent":["import { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport Axios from 'axios';\nimport { loadDocsAction } from '../redux/actions';\n\nconst axios = Axios.create();\n\nexport function axiosInit(baseURL: string) {\n  axios.defaults.baseURL = baseURL;\n  axios.defaults.withCredentials = true;\n}\n\nexport function axiosDelete(\n  url: string,\n  params: any,\n  options?: { dispatch?: Function },\n) {\n  return axios.delete(url, { data: params }).then(({ data }) => {\n    loadDocs(data, options);\n    return data;\n  });\n}\n\nexport function axiosPost(\n  url: string,\n  params: any,\n  options?: { dispatch?: Function },\n) {\n  return axios.post(url, params).then(({ data }) => {\n    loadDocs(data, options);\n    return data;\n  });\n}\n\nexport function axiosGet(\n  url: string,\n  params?: any,\n  options?: { dispatch?: Function },\n) {\n  return axios(url, { method: 'get', params }).then(({ data }) => {\n    loadDocs(data, options);\n    return data;\n  });\n}\n\nexport function useAxiosGet(\n  url: string,\n  latestParams: any,\n  options: {\n    name: string;\n    reloadOnChange?: boolean;\n    reloadCallback?: Function;\n    cachedResult?: any;\n    dispatch?: Function;\n  },\n) {\n  const cachedResult = options?.cachedResult;\n  const reloadOnChange = options?.reloadOnChange;\n  const reloadCallback = options?.reloadCallback;\n  const name = options?.name;\n  const dispatch = options?.dispatch;\n\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const [result, setResult] = useState<any>(undefined);\n  const [params, setParams] = useState(latestParams);\n  const [cache, setCache] = useState(cachedResult);\n\n  if (reloadOnChange && !_.isEqual(params, latestParams)) {\n    setCache(null);\n    setParams(latestParams);\n    reloadCallback && reloadCallback();\n  }\n\n  useEffect(() => {\n    let isMounted = true;\n\n    setIsSuccess(false);\n\n    if (!_.isEmpty(cache)) {\n      setResult({ docs: [cache] });\n      setIsSuccess(true);\n    } else {\n      axiosGet(url, params, { dispatch })\n        .then((data) => {\n          if (isMounted) {\n            // console.log({ name, url, params, data });\n\n            const updates = data?.updates;\n\n            const result = updates\n              ? _.map(updates, cleanResult)\n              : cleanResult(data);\n\n            setResult(result);\n            setIsSuccess(true);\n          }\n        })\n        .catch((error) => {\n          if (isMounted) {\n            setError(error);\n          }\n        });\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [url, params, cache, name, dispatch]);\n\n  return { isSuccess, error, result };\n}\n\nfunction loadDocs(result: any, options?: { dispatch?: Function }) {\n  const dispatch = options?.dispatch;\n\n  if (dispatch) {\n    const updates = result?.updates;\n\n    if (updates) {\n      _.each(updates, dispatch(loadDocsAction));\n    } else {\n      dispatch(loadDocsAction(result));\n    }\n  }\n}\n\nfunction cleanResult({ docs, next, page, collection }: any) {\n  return {\n    docs,\n    next,\n    page: _.toInteger(page),\n    collection,\n  };\n}\n\nexport default axios;\n"]}